//===== rAthena Script =======================================
//= Euphy's Quest Shop
//===== By: ==================================================
//= Euphy
//===== Update Costama By: ==================================================
//= Boy
//===== Current Version: =====================================
//= 1.4a
//===== Compatible With: =====================================
//= rAthena SVN r15340+
//===== Description: =========================================
//= A dynamic quest shop based on Lunar's, with easier config.
//= Includes support for multiple shops & cashpoints.
//= Item Preview script by ToastOfDoom.
//============================================================
					
moc_para01,33,171,5	script	Costama	10242,{
function Add; function Chk; function Slot; function A_An;
if (checkweight(21016,1) == 0) {
	mes "[^FF6600Costama^000000]";
    mes "You're carrying too much stuffs , make some space and come back to me later";
        close;	
	}

	mes "[^FF6600Costama^000000]";
	mes "Hello, I am Costama.";
	mes "I can make famous gears and costumes for you.";
	next;
	mes "[^FF6600Costama^000000]";
	mes "Do you want to see the list ?";
	next;
	switch( select( "Yes.:No." ) ) {
case 1: 		
	mes "[^FF6600Costama^000000]";
	mes "Here's the list.";
	break; 
case 2: 	
	mes "[^FF6600Costama^000000]";
    mes "Okay, see you again.";
   	close;
}
	if(.Shops$ != "") set .@i,1;
	else {
		set .@menu$,"";
		for(set .@i,1; .@i<=getarraysize(.Shops$); set .@i,.@i+1)
			set .@menu$, .@menu$+.Shops$[.@i]+":";
		set .@i, select(.@menu$); }
		mes "^0055FFYou can only select one item at a time.^000000";
	callshop "cardgear"+.@i,1;
	npcshopattach "cardgear"+.@i;
	end;

function Add {
	if (getitemname(getarg(1))=="null") {
		debugmes "Quest reward #"+getarg(1)+" invalid (skipped)."; return; }
	for(set .@n,5; .@n<127; set .@n,.@n+2) {
		if (!getarg(.@n,0)) break;
		if (getitemname(getarg(.@n))=="null") {
			debugmes "Quest requirement #"+getarg(.@n)+" invalid (skipped) on Quest ItemID "+ getarg(1) +"."; return; } }
	for(set .@i,2; .@i<.@n; set .@i,.@i+1)
		set getd(".q_"+getarg(1)+"["+(.@i-2)+"]"), getarg(.@i);
	npcshopadditem "cardgear"+getarg(0),getarg(1),((.ShowZeny)?getarg(3):0);
	return; }
function Chk {
	if (getarg(0)<getarg(1)) { set @qe0,1; return "^FF0000"; }
	else return "^00FF00"; }
function Slot {
	set .@s$,getitemname(getarg(0));
	switch(.ShowSlot){
		case 1: if (!getitemslots(getarg(0))) return .@s$;
		case 2: if (getiteminfo(getarg(0),11)>0) return .@s$+" ["+getitemslots(getarg(0))+"]";
		default: return .@s$; } }
function A_An {
	setarray .@A$[0],"a","e","i","o","u";
	set .@B$, "_"+getarg(0);
	for(set .@i,0; .@i<5; set .@i,.@i+1)
		if (compare(.@B$,"_"+.@A$[.@i])) return "an "+getarg(0);
	return "a "+getarg(0); }

OnBuyItem:
	set .@q[0],@bought_nameid;
	copyarray .@q[1],getd(".q_"+@bought_nameid+"[0]"),getarraysize(getd(".q_"+@bought_nameid+"[0]"));
	if (!.@q[1]) { message strcharinfo(0),"An error has occurred."; end; }
	mes "[^FF6600Costama^000000]";
	mes "Your Choice: ^0055FF"+((.@q[1]>1)?.@q[1]+"x ":"")+Slot(.@q[0])+"^000000";
	mes "Requirements:";
	if (.@q[2]) mes " > "+Chk(Zeny,.@q[2])+.@q[2]+" Zeny^000000";
	if (.@q[3]) mes " > "+Chk(getd(.Points$[0]),.@q[3])+.@q[3]+" "+.Points$[1]+" ("+getd(.Points$[0])+"/"+.@q[3]+")^000000";
	if (.@q[4]) for(set .@i,4; .@i<getarraysize(.@q); set .@i,.@i+2)
		mes " > "+Chk(countitem(.@q[.@i]),.@q[.@i+1])+((.DisplayID)?"{"+.@q[.@i]+"} ":"")+Slot(.@q[.@i])+" ("+countitem(.@q[.@i])+"/"+.@q[.@i+1]+")^000000";
	next;
	set @qe1, getiteminfo(.@q[0],5); set @qe2, getiteminfo(.@q[0],11);
	while(1){
		switch(select(" ~ Purchase ^0055FF"+getitemname(.@q[0])+"^000000: ~ ^777777Cancel^000000")) {
			case 1:		
				if (@qe0) { 
					mes "[^FF6600Costama^000000]";
					mes "You're missing one or more quest requirements.";
					close; }
				if (!checkweight(.@q[0],.@q[1])) {
					mes "[^FF6600Costama^000000]";
					mes "^FF0000You need "+(((.@q[1]*getiteminfo(.@q[0],6))+Weight-MaxWeight)/10)+" additional weight capacity to complete this trade.^000000";
					close; }
				if (.@q[2]) set Zeny, Zeny-.@q[2];
				if (.@q[3]) setd .Points$[0], getd(.Points$[0])-.@q[3];
				if (.@q[4]) for(set .@i,4; .@i<getarraysize(.@q); set .@i,.@i+2)
					delitem .@q[.@i],.@q[.@i+1];
			if (rand(1,1) == 1) {
				if (.Announce) announce strcharinfo(0)+" has created "+A_An(getitemname(.@q[0]))+"!",0;
				getitem .@q[0],.@q[1];
				specialeffect2 699;
					mes "[^FF6600Costama^000000]";
					mes "Here's your item.";
					mes "Congratulation !.";
					close;				
			} 
			else {
					specialeffect EF_SUI_EXPLOSION;
					mes "[^FF6600Costama^000000]";
					mes "Woah, exploded like a firecracker.";
					mes "hahahahahaha.";
					close; 
			}			
			case 2:
				close; } }

OnInit:
// --------------------- Config ---------------------
// Custom points, if needed: "<variable>","<name to display>"
	setarray .Points$[0],"#CASHPOINTS","Cash Points";

	set .Announce,0;	// Announce quest completion? (1: yes / 0: no)
	set .ShowSlot,0;	// Show item slots? (2: all equipment / 1: if slots > 0 / 0: never)
	set .DisplayID,0;	// Show item IDs? (1: yes / 0: no)
	set .ShowZeny,1;	// Show Zeny cost, if any? (1: yes / 0: no)

// Shop categories, if needed: "<Shop 1>","<Shop 2>"{,...};
// Duplicate dummy data for any additional shops (bottom of script).
// If no categories, use the second line instead (remove //).

//	setarray .Shops$[1],"Make Slotted Doll Headgear.";
	setarray .Shops$[2],"Make Lower Headgear";
	setarray .Shops$[3],"Classic Headgear Box.";
	setarray .Shops$[4],"What's inside the box ?";
	// set .Shops$,"n/a";

// Add(<shop number>,<reward ID>,<reward amount>,<Zeny cost>,<point cost>,
//     <required item ID>,<required item amount>{,...});
// Shop number corresponds with order above (default is 1).
// Note: Do NOT use a reward item more than once!
	
	Add(1,5387,1,0,0,5020,1,6417,5);
	Add(1,5253,1,0,0,5020,1,979,2,6417,5);
	Add(1,5340,1,0,0,5020,1,978,2,6417,5);
	Add(1,5341,1,0,0,5020,1,982,2,6417,5);
	Add(1,5342,1,0,0,5020,1,983,2,6417,5);
	Add(1,5343,1,0,0,5020,1,981,2,6417,5);
	Add(1,5344,1,0,0,5020,1,980,2,6417,5);
	Add(1,5345,1,0,0,5020,1,976,2,6417,5);
	Add(1,5607,1,0,0,5020,1,975,2,6417,5);
	Add(1,5608,1,0,0,5020,1,978,1,975,1,6417,5);
	Add(1,5459,1,0,0,5020,1,976,1,982,1,6417,5);

	add(2,18643,1,0,0,5110,1,4028,1); // Paperhand Str > Pacifier , Tarou card
	add(2,18642,1,0,0,5110,1,4023,1); // Paperhand Int > Pacifier , Baby Desert Wolf Card
	add(2,18644,1,0,0,5110,1,4021,1); // Paperhand Dex > Pacifier , Rocker card
	add(2,18677,1,0,0,2269,1,4068,1); // Cherry Twig in Mouth > Romantic Flower , Scorpion Card
	add(2,5305,1,0,0,2266,1,4073,1); // Pirate Dagger > Iron Cain , Pirate Skeleton Card	
	add(2,5403,1,0,0,5065,1,4326,1); // Fish in Mouth > Blue fish , Sea Otter Card	
	
	Add(3,12026,1,10000000,0); // Box
	
	add(4,5099,1,0,1,6417,100); // Cat Hat
	add(4,18640,1,0,1,6417,100); // Autumn Headband
	add(4,5678,1,0,1,6417,100); // Headphone
	add(4,5138,1,0,1,6417,100); // Magic_Eyes
	add(4,5481,1,0,1,6417,100); // Hermode
	add(4,5139,1,0,1,6417,100); // Hibiscus
	add(4,5140,1,0,1,6417,100); // Charming Ribbon
	add(4,5142,1,0,1,6417,100); // Crescent Helm
	add(4,5143,1,0,1,6417,100); // Kabuki Mask
	add(4,5152,1,0,1,6417,100); // Chinese Crown
	add(4,5181,1,0,1,6417,100); // Helm of Darkness
//	add(4,5183,1,0,1,6417,100); // Bird Nest Hat
	add(4,18589,1,0,1,6417,100); // Strawberry
	sleep 10;
	add(4,5363,1,0,1,6417,100); // Abyss
	add(4,5292,1,0,1,6417,100); // Dragon Skull
	Add(4,5501,1,0,1,6417,100); // Pirate
//	add(4,5388,1,0,1,6417,100); // Snake Head
	add(4,5782,1,0,1,6417,100); // Legionnaire
	add(4,5294,1,0,1,6417,100); // Whisper
	add(4,5509,1,0,1,6417,100); // Sting Hat
	add(4,5185,1,0,1,6417,100); // Laurel Wreath
	add(4,5186,1,0,1,6417,100); // Geographer Band	
	add(4,5467,1,0,1,6417,100); // Dragon Helm
	add(4,5761,1,0,1,6417,100); // Sloth
	add(4,5212,1,0,1,6417,100); // Satellite		
//	add(4,5563,1,0,1,6417,100); // Dolor
	add(4,5572,1,0,1,6417,100); // Babe
	add(4,5496,1,0,1,6417,100); // Dice Hat
//	add(4,5289,1,0,1,6417,100); // Vanilmirth
//	add(4,5659,1,0,1,6417,100); // Sleeper
//	add(4,5658,1,0,1,6417,100); // Imp
//	add(4,5380,1,0,1,6417,100); // Fish
	sleep 10;
	add(4,5182,1,0,1,6417,100); // Puppy Hat
	add(4,5324,1,0,1,6417,100); // Little Angel
	add(4,5259,1,0,1,6417,100); // Elephant
	add(4,5414,1,0,1,6417,100); // Campfire
	add(4,18595,1,0,1,6417,100); // Ancient Horn
	add(4,5762,1,0,1,6417,100); // Duneyrr
	add(4,5133,1,0,1,6417,100); // Sheep
	add(4,5382,1,0,1,6417,100); // Bell Ribbon
	add(4,5187,1,0,1,6417,100); // Twin Ribbon
	

		
	add(5,18740,1,10,0,6417,100); // C_Hair_Of_The_Strong
	add(5,18741,0,10,0,6417,100); 
	add(5,19294,1,10,0,6417,100);
	add(5,19507,1,10,0,6417,100);
	add(5,19515,1,10,0,6417,100);
	add(5,19516,1,10,0,6417,100);
	add(5,19518,1,10,0,6417,100);
	add(5,19519,1,10,0,6417,100);
	add(5,19520,1,10,0,6417,100);
	add(5,19521,0,10,0,6417,100);
	add(5,19522,1,10,0,6417,100);
	add(5,19523,1,10,0,6417,100);
	add(5,19525,1,10,0,6417,100);
	add(5,18537,1,10,0,6417,100);
	
	add(5,20200,1,10,0,6417,100);
	add(5,20202,1,10,0,6417,100);
	add(5,20217,1,10,0,6417,100);
	add(5,20230,1,10,0,6417,100);
	add(5,20231,0,10,0,6417,100);
	add(5,20232,1,10,0,6417,100);
	add(5,20263,1,10,0,6417,100);
	add(5,20761,0,10,0,6417,100);
	add(5,20798,1,10,0,6417,100);
	sleep 10;
	add(5,19954,1,10,0,6417,100);
	add(5,20071,0,10,0,6417,100);
	add(5,20239,1,10,0,6417,100);
	add(5,20242,1,10,0,6417,100);
	add(5,20273,1,10,0,6417,100);
	add(5,20762,1,10,0,6417,100);
	add(5,18740,1,10,0,6417,100);
	add(5,19815,1,10,0,6417,100);
	add(5,20255,1,10,0,6417,100);
	add(5,20266,1,10,0,6417,100);
	add(5,20268,1,10,0,6417,100);
	add(5,20286,1,10,0,6417,100);
	Add(5,20329,1,10,0,6417,100);
	

// --------------------------------------------------
	for(set .@i,1; .@i<=getarraysize(.Shops$); set .@i,.@i+1)
		npcshopdelitem "cardgear"+.@i,909;
	end;
}

// -------- Dummy data (duplicate as needed) --------
-	shop	cardgear1	-1,909:-1
-	shop	cardgear2	-1,909:-1
-	shop	cardgear3	-1,909:-1
-	shop	cardgear4	-1,909:-1